version: '3.8'

services:
  # Database
  mongo:
    image: mongo
    restart: always
    container_name: mongodb
    networks:
      - database

  server:
    build:
      dockerfile: Dockerfile.local
      context: server/
    container_name: server
    depends_on:
      - otel-collector
      - mongo
    networks:
      - database
      - backend
    environment:
      MONGODB_CONNECTION_STRING: 'mongodb://mongo:27017/'
      OTEL_EXPORTER_OTLP_ENDPOINT: 'http://otel-collector:4317'
      OTEL_SERVICE_NAME: buf-connect-playground/server
    ports:
      - 3000:3001
    volumes:
      - ./server:/app

  grpc-cmd:
    build:
      dockerfile: Dockerfile.cmd
      context: server/
    container_name: grpc-cmd
    depends_on:
      - server
      - otel-collector
    networks:
      - backend
    environment:
      OTEL_EXPORTER_OTLP_ENDPOINT: 'http://otel-collector:4317'
      OTEL_SERVICE_NAME: buf-connect-playground/grpc-cmd

  connect-cmd:
    build:
      dockerfile: Dockerfile.cmd
      context: server/
    command: go run cmd/connect-client/main.go
    container_name: connect-cmd
    depends_on:
      - server
      - otel-collector
    networks:
      - backend
    environment:
      OTEL_EXPORTER_OTLP_ENDPOINT: 'http://otel-collector:4317'
      OTEL_SERVICE_NAME: buf-connect-playground/connect-cmd

  client:
    build:
      dockerfile: Dockerfile.local
      context: client/
    container_name: client
    depends_on:
      - server
    networks:
      - backend
    ports:
      - 8080:8080
    volumes:
      - ./client:/app
      - /app/node_modules/

  # Collectors
  otel-collector:
    image: otel/opentelemetry-collector
    container_name: otel-collector
    command: ['--config=/etc/otel-collector-config.yaml']
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    networks:
      - backend
    env_file:
      - .secret.env
    ports:
      - 4317:4317

networks:
  database:
    driver: bridge
  backend:
    driver: bridge
